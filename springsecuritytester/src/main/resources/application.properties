
server.port=8181

# OpenAPI configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true


# Even you can configure the spring security user credentials as InMemoryUserCredentials
# Spring security configuration
# spring.security.enabled=false
#spring.security.user.name=admin
#spring.security.user.password=admin
#spring.security.user.roles=ADMIN

# not required anymore, as we gonna create UserInfo through UserAuthManagementService through
#    // api endpoint http://localhost:8080/user-auth-mgmt/register
# creating some in-memory users and their passwords
#user.admin.password=admin
#user.user1.password=user1

# Add the postgres dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Postgres properties
spring.jpa.database=postgresql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# Database connection properties
spring.datasource.url=jdbc:postgresql://localhost:5432/springsecops
spring.datasource.username=postgres
spring.datasource.password=postgres

# To exclude certain schema or classes from API Documentation
# springdoc.packagesToExclude=com.example.ec.explorecli.domain.Tour,com.example.ec.explorecli.domain.TourPackage
# To completely hide the model as suggested in https://springdoc.org/properties.html#_swagger_ui_properties
# By setting it to -1, you are effectively disabling the model expansion, and the schemas will not be visible in the Swagger UI.
springdoc.swagger-ui.defaultModelsExpandDepth=-1