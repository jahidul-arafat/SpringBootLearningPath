


CREATE TABLE ADMIN_EVENT_ENTITY
(
    ID               VARCHAR2(36) PRIMARY KEY,
    ADMIN_EVENT_TIME NUMBER,
    REALM_ID         VARCHAR2(255),
    OPERATION_TYPE   VARCHAR2(255),
    AUTH_REALM_ID    VARCHAR2(255),
    AUTH_CLIENT_ID   VARCHAR2(255),
    AUTH_USER_ID     VARCHAR2(255),
    IP_ADDRESS       VARCHAR2(255),
    RESOURCE_PATH    VARCHAR2(2550),
    REPRESENTATION   CLOB,
    ERROR            VARCHAR2(255),
    RESOURCE_TYPE    VARCHAR2(64)
);

CREATE TABLE AUTHENTICATOR_CONFIG_ENTRY
(
    AUTHENTICATOR_ID VARCHAR2(36) NOT NULL,
    VALUE            CLOB,
    NAME             VARCHAR2(255) NOT NULL,
    PRIMARY KEY (AUTHENTICATOR_ID, NAME)
);

CREATE TABLE BROKER_LINK
(
    IDENTITY_PROVIDER   VARCHAR2(255) NOT NULL,
    STORAGE_PROVIDER_ID VARCHAR2(255),
    REALM_ID            VARCHAR2(36) NOT NULL,
    BROKER_USER_ID      VARCHAR2(255),
    BROKER_USERNAME     VARCHAR2(255),
    TOKEN               CLOB,
    USER_ID             VARCHAR2(255) NOT NULL,
    CONSTRAINT CONSTR_BROKER_LINK_PK PRIMARY KEY (IDENTITY_PROVIDER, USER_ID)
);

CREATE TABLE CLIENT
(
    ID                           VARCHAR2(36)           NOT NULL PRIMARY KEY,
    ENABLED                      NUMBER(1,0) DEFAULT 0 NOT NULL,
    FULL_SCOPE_ALLOWED           NUMBER(1,0) DEFAULT 0 NOT NULL,
    CLIENT_ID                    VARCHAR2(255),
    NOT_BEFORE                   NUMBER,
    PUBLIC_CLIENT                NUMBER(1,0) DEFAULT 0 NOT NULL,
    SECRET                       VARCHAR2(255),
    BASE_URL                     VARCHAR2(255),
    BEARER_ONLY                  NUMBER(1,0) DEFAULT 0 NOT NULL,
    MANAGEMENT_URL               VARCHAR2(255),
    SURROGATE_AUTH_REQUIRED      NUMBER(1,0) DEFAULT 0 NOT NULL,
    REALM_ID                     VARCHAR2(36),
    PROTOCOL                     VARCHAR2(255),
    NODE_REREG_TIMEOUT           NUMBER(1,0) DEFAULT 0,
    FRONTCHANNEL_LOGOUT          NUMBER(1,0) DEFAULT 0 NOT NULL,
    CONSENT_REQUIRED             NUMBER(1,0) DEFAULT 0 NOT NULL,
    NAME                         NVARCHAR2(255),
    SERVICE_ACCOUNTS_ENABLED     NUMBER(1,0) DEFAULT 0 NOT NULL,
    CLIENT_AUTHENTICATOR_TYPE    VARCHAR2(255),
    ROOT_URL                     VARCHAR2(255),
    DESCRIPTION                  NVARCHAR2(255),
    REGISTRATION_TOKEN           VARCHAR2(255),
    STANDARD_FLOW_ENABLED        NUMBER(1,0) DEFAULT 1 NOT NULL,
    IMPLICIT_FLOW_ENABLED        NUMBER(1,0) DEFAULT 0 NOT NULL,
    DIRECT_ACCESS_GRANTS_ENABLED NUMBER(1,0) DEFAULT 0 NOT NULL,
    ALWAYS_DISPLAY_IN_CONSOLE    NUMBER(1,0) DEFAULT 0 NOT NULL,
    CONSTRAINT UK_B71CJLBENV945RB6GCON438AT UNIQUE (REALM_ID, CLIENT_ID)
);

CREATE INDEX IDX_CLIENT_ID ON CLIENT (CLIENT_ID);

CREATE TABLE CLIENT_ATTRIBUTES
(
    CLIENT_ID VARCHAR2(36) NOT NULL,
    VALUE     VARCHAR2(4000),
    NAME      VARCHAR2(255) NOT NULL,
    PRIMARY KEY (CLIENT_ID, NAME),
    CONSTRAINT FK3C47C64BEACCA966 FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT
);

CREATE INDEX IDX_CLIENT_ATT_BY_NAME_VALUE ON CLIENT_ATTRIBUTES (NAME);

CREATE TABLE CLIENT_AUTH_FLOW_BINDINGS
(
    CLIENT_ID    VARCHAR2(36) NOT NULL,
    FLOW_ID      VARCHAR2(36),
    BINDING_NAME VARCHAR2(255) NOT NULL,
    CONSTRAINT C_CLI_FLOW_BIND PRIMARY KEY (CLIENT_ID, BINDING_NAME)
);

CREATE TABLE CLIENT_NODE_REGISTRATIONS
(
    CLIENT_ID VARCHAR2(36) NOT NULL,
    VALUE     NUMBER,
    NAME      VARCHAR2(255) NOT NULL,
    PRIMARY KEY (CLIENT_ID, NAME),
    CONSTRAINT FK4129723BA992F594 FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT
);

CREATE TABLE CLIENT_SCOPE
(
    ID          VARCHAR2(36) NOT NULL,
    NAME        VARCHAR2(255),
    REALM_ID    VARCHAR2(36),
    DESCRIPTION NVARCHAR2(255),
    PROTOCOL    VARCHAR2(255),
    CONSTRAINT PK_CLI_TEMPLATE PRIMARY KEY (ID),
    CONSTRAINT UK_CLI_SCOPE UNIQUE (REALM_ID, NAME)
);

CREATE INDEX IDX_REALM_CLSCOPE ON CLIENT_SCOPE (REALM_ID);

CREATE TABLE CLIENT_SCOPE_ATTRIBUTES
(
    SCOPE_ID VARCHAR2(36) NOT NULL,
    VALUE    VARCHAR2(2048),
    NAME     VARCHAR2(255) NOT NULL,
    CONSTRAINT PK_CL_TMPL_ATTR PRIMARY KEY (SCOPE_ID, NAME),
    CONSTRAINT FK_CL_SCOPE_ATTR_SCOPE FOREIGN KEY (SCOPE_ID) REFERENCES CLIENT_SCOPE
);

CREATE INDEX IDX_CLSCOPE_ATTRS ON CLIENT_SCOPE_ATTRIBUTES (SCOPE_ID);

CREATE TABLE CLIENT_SCOPE_CLIENT
(
    CLIENT_ID     VARCHAR2(255) NOT NULL,
    SCOPE_ID      VARCHAR2(255) NOT NULL,
    DEFAULT_SCOPE NUMBER(1,0) DEFAULT 0 NOT NULL,
    CONSTRAINT C_CLI_SCOPE_BIND PRIMARY KEY (CLIENT_ID, SCOPE_ID)
);

CREATE INDEX IDX_CLSCOPE_CL ON CLIENT_SCOPE_CLIENT (CLIENT_ID);
CREATE INDEX IDX_CL_CLSCOPE ON CLIENT_SCOPE_CLIENT (SCOPE_ID);

CREATE TABLE CLIENT_SCOPE_ROLE_MAPPING
(
    SCOPE_ID VARCHAR2(36) NOT NULL,
    ROLE_ID  VARCHAR2(36) NOT NULL,
    CONSTRAINT PK_TEMPLATE_SCOPE PRIMARY KEY (SCOPE_ID, ROLE_ID),
    CONSTRAINT FK_CL_SCOPE_RM_SCOPE FOREIGN KEY (SCOPE_ID) REFERENCES CLIENT_SCOPE
);

CREATE INDEX IDX_CLSCOPE_ROLE ON CLIENT_SCOPE_ROLE_MAPPING (SCOPE_ID);
CREATE INDEX IDX_ROLE_CLSCOPE ON CLIENT_SCOPE_ROLE_MAPPING (ROLE_ID);

CREATE TABLE DATABASECHANGELOG
(
    ID            VARCHAR2(255) NOT NULL,
    AUTHOR        VARCHAR2(255) NOT NULL,
    FILENAME      VARCHAR2(255) NOT NULL,
    DATEEXECUTED  TIMESTAMP NOT NULL,
    ORDEREXECUTED NUMBER NOT NULL,
    EXECTYPE      VARCHAR2(10) NOT NULL,
    MD5SUM        VARCHAR2(35),
    DESCRIPTION   VARCHAR2(255),
    COMMENTS      VARCHAR2(255),
    TAG           VARCHAR2(255),
    LIQUIBASE     VARCHAR2(20),
    CONTEXTS      VARCHAR2(255),
    LABELS        VARCHAR2(255),
    DEPLOYMENT_ID VARCHAR2(10)
);

CREATE TABLE DATABASECHANGELOGLOCK
(
    ID          NUMBER NOT NULL,
    LOCKED      NUMBER(1,0) NOT NULL,
    LOCKGRANTED TIMESTAMP,
    LOCKEDBY    VARCHAR2(255),
    CONSTRAINT PK_DATABASECHANGELOGLOCK PRIMARY KEY (ID)
);

CREATE TABLE EVENT_ENTITY
(
    ID           VARCHAR2(36) NOT NULL PRIMARY KEY,
    CLIENT_ID    VARCHAR2(255),
    DETAILS_JSON VARCHAR2(2550),
    ERROR        VARCHAR2(255),
    IP_ADDRESS   VARCHAR2(255),
    REALM_ID     VARCHAR2(255),
    SESSION_ID   VARCHAR2(255),
    EVENT_TIME   NUMBER,
    TYPE         VARCHAR2(255),
    USER_ID      VARCHAR2(255)
);

CREATE INDEX IDX_EVENT_TIME ON EVENT_ENTITY (REALM_ID, EVENT_TIME);

CREATE TABLE FEDERATED_USER
(
    ID                  VARCHAR2(255) NOT NULL,
    STORAGE_PROVIDER_ID VARCHAR2(255),
    REALM_ID            VARCHAR2(36) NOT NULL,
    CONSTRAINT CONSTR_FEDERATED_USER PRIMARY KEY (ID)
);

CREATE TABLE FED_USER_ATTRIBUTE
(
    ID                  VARCHAR2(36) NOT NULL,
    NAME                VARCHAR2(255) NOT NULL,
    USER_ID             VARCHAR2(255) NOT NULL,
    REALM_ID            VARCHAR2(36) NOT NULL,
    STORAGE_PROVIDER_ID VARCHAR2(36),
    VALUE               VARCHAR2(2024),
    CONSTRAINT CONSTR_FED_USER_ATTR_PK PRIMARY KEY (ID)
);

CREATE INDEX IDX_FU_ATTRIBUTE ON FED_USER_ATTRIBUTE (USER_ID, REALM_ID, NAME);

CREATE TABLE FED_USER_CONSENT
(
    ID                      VARCHAR2(36) NOT NULL,
    CLIENT_ID               VARCHAR2(255),
    USER_ID                 VARCHAR2(255) NOT NULL,
    REALM_ID                VARCHAR2(36) NOT NULL,
    STORAGE_PROVIDER_ID     VARCHAR2(36),
    CREATED_DATE            NUMBER,
    LAST_UPDATED_DATE       NUMBER,
    CLIENT_STORAGE_PROVIDER VARCHAR2(36),
    EXTERNAL_CLIENT_ID      VARCHAR2(255),
    CONSTRAINT CONSTR_FED_USER_CONSENT_PK PRIMARY KEY (ID)
);
CREATE INDEX IDX_FU_CNSNT_EXT ON FED_USER_CONSENT (USER_ID, CLIENT_STORAGE_PROVIDER, EXTERNAL_CLIENT_ID);
CREATE INDEX IDX_FU_CONSENT ON FED_USER_CONSENT (USER_ID, CLIENT_ID);
CREATE INDEX IDX_FU_CONSENT_RU ON FED_USER_CONSENT (REALM_ID, USER_ID);

CREATE TABLE FED_USER_CONSENT_CL_SCOPE
(
    USER_CONSENT_ID VARCHAR2(36) NOT NULL,
    SCOPE_ID        VARCHAR2(36) NOT NULL,
    CONSTRAINT PK_FED_USER_CONSENT_CL_SCOPE PRIMARY KEY (USER_CONSENT_ID, SCOPE_ID)
);

CREATE TABLE FED_USER_CREDENTIAL
(
    ID                  VARCHAR2(36)  NOT NULL,
    SALT                BLOB,
    TYPE                VARCHAR2(255),
    CREATED_DATE        NUMBER,
    USER_ID             VARCHAR2(255) NOT NULL,
    REALM_ID            VARCHAR2(36)  NOT NULL,
    STORAGE_PROVIDER_ID VARCHAR2(36),
    USER_LABEL          VARCHAR2(255),
    SECRET_DATA         CLOB,
    CREDENTIAL_DATA     CLOB,
    PRIORITY            NUMBER,
    CONSTRAINT PK_FED_USER_CREDENTIAL PRIMARY KEY (ID)
);

CREATE INDEX IDX_FU_CREDENTIAL ON FED_USER_CREDENTIAL (USER_ID, TYPE);
CREATE INDEX IDX_FU_CREDENTIAL_RU ON FED_USER_CREDENTIAL (REALM_ID, USER_ID);

CREATE TABLE FED_USER_GROUP_MEMBERSHIP
(
    GROUP_ID            VARCHAR2(36)  NOT NULL,
    USER_ID             VARCHAR2(255) NOT NULL,
    REALM_ID            VARCHAR2(36)  NOT NULL,
    STORAGE_PROVIDER_ID VARCHAR2(36),
    CONSTRAINT PK_FED_USER_GROUP PRIMARY KEY (GROUP_ID, USER_ID)
);

CREATE INDEX IDX_FU_GROUP_MEMBERSHIP ON FED_USER_GROUP_MEMBERSHIP (USER_ID, GROUP_ID);
CREATE INDEX IDX_FU_GROUP_MEMBERSHIP_RU ON FED_USER_GROUP_MEMBERSHIP (REALM_ID, USER_ID);

CREATE TABLE FED_USER_REQUIRED_ACTION
(
    REQUIRED_ACTION     VARCHAR2(255) DEFAULT ' ' NOT NULL,
    USER_ID             VARCHAR2(255)             NOT NULL,
    REALM_ID            VARCHAR2(36)              NOT NULL,
    STORAGE_PROVIDER_ID VARCHAR2(36),
    CONSTRAINT PK_FED_REQUIRED_ACTION PRIMARY KEY (REQUIRED_ACTION, USER_ID)
);

CREATE INDEX IDX_FU_REQUIRED_ACTION ON FED_USER_REQUIRED_ACTION (USER_ID, REQUIRED_ACTION);
CREATE INDEX IDX_FU_REQUIRED_ACTION_RU ON FED_USER_REQUIRED_ACTION (REALM_ID, USER_ID);

CREATE TABLE FED_USER_ROLE_MAPPING
(
    ROLE_ID             VARCHAR2(36)  NOT NULL,
    USER_ID             VARCHAR2(255) NOT NULL,
    REALM_ID            VARCHAR2(36)  NOT NULL,
    STORAGE_PROVIDER_ID VARCHAR2(36),
    CONSTRAINT PK_FED_USER_ROLE PRIMARY KEY (ROLE_ID, USER_ID)
);

CREATE INDEX IDX_FU_ROLE_MAPPING ON FED_USER_ROLE_MAPPING (USER_ID, ROLE_ID);
CREATE INDEX IDX_FU_ROLE_MAPPING_RU ON FED_USER_ROLE_MAPPING (REALM_ID, USER_ID);

CREATE TABLE KEYCLOAK_GROUP
(
    ID           VARCHAR2(36) NOT NULL PRIMARY KEY,
    NAME         NVARCHAR2(255),
    PARENT_GROUP VARCHAR2(36) NOT NULL,
    REALM_ID     VARCHAR2(36),
    CONSTRAINT SIBLING_NAMES UNIQUE (REALM_ID, PARENT_GROUP, NAME)
);

CREATE TABLE GROUP_ATTRIBUTE
(
    ID       VARCHAR2(36) DEFAULT 'sybase-needs-something-here' NOT NULL PRIMARY KEY,
    NAME     VARCHAR2(255)                                    NOT NULL,
    VALUE    NVARCHAR2(255),
    GROUP_ID VARCHAR2(36)                                     NOT NULL,
    CONSTRAINT FK_GROUP_ATTRIBUTE_GROUP FOREIGN KEY (GROUP_ID) REFERENCES KEYCLOAK_GROUP (ID)
);

CREATE INDEX IDX_GROUP_ATTR_GROUP ON GROUP_ATTRIBUTE (GROUP_ID);

CREATE TABLE GROUP_ROLE_MAPPING
(
    ROLE_ID  VARCHAR2(36) NOT NULL,
    GROUP_ID VARCHAR2(36) NOT NULL,
    PRIMARY KEY (ROLE_ID, GROUP_ID),
    CONSTRAINT FK_GROUP_ROLE_GROUP FOREIGN KEY (GROUP_ID) REFERENCES KEYCLOAK_GROUP (ID)
);

CREATE INDEX IDX_GROUP_ROLE_MAPP_GROUP ON GROUP_ROLE_MAPPING (GROUP_ID);

CREATE TABLE MIGRATION_MODEL
(
    ID          VARCHAR2(36)      NOT NULL PRIMARY KEY,
    VERSION     VARCHAR2(36),
    UPDATE_TIME NUMBER(19, 0) DEFAULT 0 NOT NULL
);

CREATE INDEX IDX_UPDATE_TIME ON MIGRATION_MODEL (UPDATE_TIME);

CREATE TABLE OFFLINE_CLIENT_SESSION
(
    USER_SESSION_ID         VARCHAR2(36)   NOT NULL,
    CLIENT_ID               VARCHAR2(255)  NOT NULL,
    OFFLINE_FLAG            VARCHAR2(4)    NOT NULL,
    TIMESTAMP               NUMBER(10, 0),
    DATA                    CLOB,
    CLIENT_STORAGE_PROVIDER VARCHAR2(36)   DEFAULT 'local' NOT NULL,
    EXTERNAL_CLIENT_ID      VARCHAR2(255)  DEFAULT 'local' NOT NULL,
    PRIMARY KEY (USER_SESSION_ID, CLIENT_ID, CLIENT_STORAGE_PROVIDER, EXTERNAL_CLIENT_ID, OFFLINE_FLAG)
);

CREATE INDEX IDX_OFFLINE_CSS_PRELOAD ON OFFLINE_CLIENT_SESSION (CLIENT_ID, OFFLINE_FLAG);

CREATE INDEX IDX_US_SESS_ID_ON_CL_SESS ON OFFLINE_CLIENT_SESSION (USER_SESSION_ID);

CREATE TABLE OFFLINE_USER_SESSION
(
    USER_SESSION_ID      VARCHAR2(36)   NOT NULL,
    USER_ID              VARCHAR2(255)  NOT NULL,
    REALM_ID             VARCHAR2(36)   NOT NULL,
    CREATED_ON           NUMBER(10, 0)  NOT NULL,
    OFFLINE_FLAG         VARCHAR2(4)    NOT NULL,
    DATA                 CLOB,
    LAST_SESSION_REFRESH NUMBER(10, 0)  DEFAULT 0 NOT NULL,
    PRIMARY KEY (USER_SESSION_ID, OFFLINE_FLAG)
);

CREATE INDEX IDX_OFFLINE_USS_BY_USER ON OFFLINE_USER_SESSION (USER_ID, REALM_ID, OFFLINE_FLAG);

CREATE INDEX IDX_OFFLINE_USS_BY_USERSESS ON OFFLINE_USER_SESSION (REALM_ID, OFFLINE_FLAG, USER_SESSION_ID);

CREATE INDEX IDX_OFFLINE_USS_CREATEDON ON OFFLINE_USER_SESSION (CREATED_ON);

CREATE INDEX IDX_OFFLINE_USS_PRELOAD ON OFFLINE_USER_SESSION (OFFLINE_FLAG, CREATED_ON, USER_SESSION_ID);

CREATE TABLE PROTOCOL_MAPPER
(
    ID                   VARCHAR2(36)  NOT NULL,
    NAME                 VARCHAR2(255) NOT NULL,
    PROTOCOL             VARCHAR2(255) NOT NULL,
    PROTOCOL_MAPPER_NAME VARCHAR2(255) NOT NULL,
    CLIENT_ID            VARCHAR2(36),
    CLIENT_SCOPE_ID      VARCHAR2(36),
    CONSTRAINT FK_CLI_SCOPE_MAPPER FOREIGN KEY (CLIENT_SCOPE_ID) REFERENCES CLIENT_SCOPE,
    CONSTRAINT FK_PCM_REALM FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT,
    PRIMARY KEY (ID)
);

CREATE INDEX IDX_CLSCOPE_PROTMAP ON PROTOCOL_MAPPER (CLIENT_SCOPE_ID);

CREATE INDEX IDX_PROTOCOL_MAPPER_CLIENT ON PROTOCOL_MAPPER (CLIENT_ID);

CREATE TABLE PROTOCOL_MAPPER_CONFIG
(
    PROTOCOL_MAPPER_ID VARCHAR2(36)  NOT NULL,
    VALUE              CLOB,
    NAME               VARCHAR2(255) NOT NULL,
    PRIMARY KEY (PROTOCOL_MAPPER_ID, NAME),
    CONSTRAINT FK_PMCONFIG FOREIGN KEY (PROTOCOL_MAPPER_ID) REFERENCES PROTOCOL_MAPPER
);

CREATE TABLE REALM
(
    ID                           VARCHAR2(36) NOT NULL,
    ACCESS_CODE_LIFESPAN         NUMBER       ,
    USER_ACTION_LIFESPAN         NUMBER       ,
    ACCESS_TOKEN_LIFESPAN        NUMBER       ,
    ACCOUNT_THEME                VARCHAR2(255),
    ADMIN_THEME                  VARCHAR2(255),
    EMAIL_THEME                  VARCHAR2(255),
    ENABLED                      NUMBER(1, 0) DEFAULT 0 NOT NULL,
    EVENTS_ENABLED               NUMBER(1, 0) DEFAULT 0 NOT NULL,
    EVENTS_EXPIRATION            NUMBER       ,
    LOGIN_THEME                  VARCHAR2(255),
    NAME                         VARCHAR2(255) CONSTRAINT UK_ORVSDMLA56612EAEFIQ6WL5OI UNIQUE,
    NOT_BEFORE                   NUMBER       ,
    PASSWORD_POLICY              VARCHAR2(2550),
    REGISTRATION_ALLOWED         NUMBER(1, 0) DEFAULT 0 NOT NULL,
    REMEMBER_ME                  NUMBER(1, 0) DEFAULT 0 NOT NULL,
    RESET_PASSWORD_ALLOWED       NUMBER(1, 0) DEFAULT 0 NOT NULL,
    SOCIAL                       NUMBER(1, 0) DEFAULT 0 NOT NULL,
    SSL_REQUIRED                 VARCHAR2(255),
    SSO_IDLE_TIMEOUT             NUMBER       ,
    SSO_MAX_LIFESPAN             NUMBER       ,
    UPDATE_PROFILE_ON_SOC_LOGIN  NUMBER(1, 0) DEFAULT 0 NOT NULL,
    VERIFY_EMAIL                 NUMBER(1, 0) DEFAULT 0 NOT NULL,
    MASTER_ADMIN_CLIENT          VARCHAR2(36),
    LOGIN_LIFESPAN               NUMBER       ,
    INTERNATIONALIZATION_ENABLED NUMBER(1, 0) DEFAULT 0 NOT NULL,
    DEFAULT_LOCALE               VARCHAR2(255),
    REG_EMAIL_AS_USERNAME        NUMBER(1, 0) DEFAULT 0 NOT NULL,
    ADMIN_EVENTS_ENABLED         NUMBER(1, 0) DEFAULT 0 NOT NULL,
    ADMIN_EVENTS_DETAILS_ENABLED NUMBER(1, 0) DEFAULT 0 NOT NULL,
    EDIT_USERNAME_ALLOWED        NUMBER(1, 0) DEFAULT 0 NOT NULL,
    OTP_POLICY_COUNTER           NUMBER       DEFAULT 0,
    OTP_POLICY_WINDOW            NUMBER       DEFAULT 1,
    OTP_POLICY_PERIOD            NUMBER       DEFAULT 30,
    OTP_POLICY_DIGITS            NUMBER       DEFAULT 6,
    OTP_POLICY_ALG               VARCHAR2(36) DEFAULT 'HmacSHA1',
    OTP_POLICY_TYPE              VARCHAR2(36) DEFAULT 'totp',
    BROWSER_FLOW                 VARCHAR2(36),
    REGISTRATION_FLOW            VARCHAR2(36),
    DIRECT_GRANT_FLOW            VARCHAR2(36),
    RESET_CREDENTIALS_FLOW       VARCHAR2(36),
    CLIENT_AUTH_FLOW             VARCHAR2(36),
    OFFLINE_SESSION_IDLE_TIMEOUT NUMBER       DEFAULT 0,
    REVOKE_REFRESH_TOKEN         NUMBER(1, 0) DEFAULT 0 NOT NULL,
    ACCESS_TOKEN_LIFE_IMPLICIT   NUMBER       DEFAULT 0,
    LOGIN_WITH_EMAIL_ALLOWED     NUMBER(1, 0) DEFAULT 1 NOT NULL,
    DUPLICATE_EMAILS_ALLOWED     NUMBER(1, 0) DEFAULT 0 NOT NULL,
    DOCKER_AUTH_FLOW             VARCHAR2(36),
    REFRESH_TOKEN_MAX_REUSE      NUMBER       DEFAULT 0,
    ALLOW_USER_MANAGED_ACCESS    NUMBER(1, 0) DEFAULT 0 NOT NULL,
    SSO_MAX_LIFESPAN_REMEMBER_ME NUMBER       DEFAULT 0 NOT NULL,
    SSO_IDLE_TIMEOUT_REMEMBER_ME NUMBER       DEFAULT 0 NOT NULL,
    DEFAULT_ROLE                 VARCHAR2(255),
    PRIMARY KEY (ID)
);

CREATE TABLE AUTHENTICATION_FLOW
(
    ID          VARCHAR2(36)      NOT NULL,
    ALIAS       VARCHAR2(255),
    DESCRIPTION NVARCHAR2(255),
    REALM_ID    VARCHAR2(36),
    PROVIDER_ID VARCHAR2(36)      DEFAULT 'basic-flow' NOT NULL,
    TOP_LEVEL   NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    BUILT_IN    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT FK_AUTH_FLOW_REALM FOREIGN KEY (REALM_ID) REFERENCES REALM,
    PRIMARY KEY (ID)
);

CREATE TABLE AUTHENTICATION_EXECUTION
(
    ID                 VARCHAR2(36)     NOT NULL,
    ALIAS              VARCHAR2(255),
    AUTHENTICATOR      VARCHAR2(36),
    REALM_ID           VARCHAR2(36),
    FLOW_ID            VARCHAR2(36),
    REQUIREMENT        NUMBER,
    PRIORITY           NUMBER,
    AUTHENTICATOR_FLOW NUMBER(1, 0) DEFAULT 0 NOT NULL,
    AUTH_FLOW_ID       VARCHAR2(36),
    AUTH_CONFIG        VARCHAR2(36),
    CONSTRAINT FK_AUTH_EXEC_FLOW FOREIGN KEY (FLOW_ID) REFERENCES AUTHENTICATION_FLOW,
    CONSTRAINT FK_AUTH_EXEC_REALM FOREIGN KEY (REALM_ID) REFERENCES REALM,
    PRIMARY KEY (ID)
);

CREATE INDEX IDX_AUTH_EXEC_FLOW ON AUTHENTICATION_EXECUTION (FLOW_ID);

CREATE INDEX IDX_AUTH_EXEC_REALM_FLOW ON AUTHENTICATION_EXECUTION (REALM_ID, FLOW_ID);

CREATE INDEX IDX_AUTH_FLOW_REALM ON AUTHENTICATION_FLOW (REALM_ID);

CREATE TABLE AUTHENTICATOR_CONFIG
(
    ID       VARCHAR2(36) NOT NULL,
    ALIAS    VARCHAR2(255),
    REALM_ID VARCHAR2(36),
    CONSTRAINT FK_AUTH_REALM FOREIGN KEY (REALM_ID) REFERENCES REALM,
    PRIMARY KEY (ID)
);

CREATE INDEX IDX_AUTH_CONFIG_REALM ON AUTHENTICATOR_CONFIG (REALM_ID);

CREATE TABLE CLIENT_INITIAL_ACCESS
(
    ID              VARCHAR2(36) NOT NULL,
    REALM_ID        VARCHAR2(36) NOT NULL,
    TIMESTAMP       NUMBER,
    EXPIRATION      NUMBER,
    COUNT           NUMBER,
    REMAINING_COUNT NUMBER,
    CONSTRAINT CNSTR_CLIENT_INIT_ACC_PK PRIMARY KEY (ID),
    CONSTRAINT FK_CLIENT_INIT_ACC_REALM FOREIGN KEY (REALM_ID) REFERENCES REALM
);

CREATE INDEX IDX_CLIENT_INIT_ACC_REALM ON CLIENT_INITIAL_ACCESS (REALM_ID);

CREATE TABLE COMPONENT
(
    ID            VARCHAR2(36) NOT NULL,
    NAME          VARCHAR2(255),
    PARENT_ID     VARCHAR2(36),
    PROVIDER_ID   VARCHAR2(36),
    PROVIDER_TYPE VARCHAR2(255),
    REALM_ID      VARCHAR2(36),
    SUB_TYPE      VARCHAR2(255),
    CONSTRAINT CONSTR_COMPONENT_PK PRIMARY KEY (ID),
    CONSTRAINT FK_COMPONENT_REALM FOREIGN KEY (REALM_ID) REFERENCES REALM
);

CREATE INDEX IDX_COMPONENT_PROVIDER_TYPE ON COMPONENT (PROVIDER_TYPE);

CREATE INDEX IDX_COMPONENT_REALM ON COMPONENT (REALM_ID);

CREATE TABLE COMPONENT_CONFIG
(
    ID           VARCHAR2(36)  NOT NULL,
    COMPONENT_ID VARCHAR2(36)  NOT NULL,
    NAME         VARCHAR2(255) NOT NULL,
    VALUE        NVARCHAR2(4000),
    CONSTRAINT CONSTR_COMPONENT_CONFIG_PK PRIMARY KEY (ID),
    CONSTRAINT FK_COMPONENT_CONFIG FOREIGN KEY (COMPONENT_ID) REFERENCES COMPONENT
);

CREATE INDEX IDX_COMPO_CONFIG_COMPO ON COMPONENT_CONFIG (COMPONENT_ID);

CREATE TABLE DEFAULT_CLIENT_SCOPE
(
    REALM_ID      VARCHAR2(36) NOT NULL,
    SCOPE_ID      VARCHAR2(36) NOT NULL,
    DEFAULT_SCOPE NUMBER(1, 0) DEFAULT 0 NOT NULL,
    CONSTRAINT R_DEF_CLI_SCOPE_BIND PRIMARY KEY (REALM_ID, SCOPE_ID),
    CONSTRAINT FK_R_DEF_CLI_SCOPE_REALM FOREIGN KEY (REALM_ID) REFERENCES REALM
);

CREATE INDEX IDX_DEFCLS_REALM ON DEFAULT_CLIENT_SCOPE (REALM_ID);

CREATE INDEX IDX_DEFCLS_SCOPE ON DEFAULT_CLIENT_SCOPE (SCOPE_ID);

CREATE TABLE IDENTITY_PROVIDER
(
    INTERNAL_ID                VARCHAR2(36) NOT NULL,
    ENABLED                    NUMBER(1, 0) DEFAULT 0 NOT NULL,
    PROVIDER_ALIAS             VARCHAR2(255),
    PROVIDER_ID                VARCHAR2(255),
    STORE_TOKEN                NUMBER(1, 0) DEFAULT 0 NOT NULL,
    AUTHENTICATE_BY_DEFAULT    NUMBER(1, 0) DEFAULT 0 NOT NULL,
    REALM_ID                   VARCHAR2(36),
    ADD_TOKEN_ROLE             NUMBER(1, 0) DEFAULT 1 NOT NULL,
    TRUST_EMAIL                NUMBER(1, 0) DEFAULT 0 NOT NULL,
    FIRST_BROKER_LOGIN_FLOW_ID VARCHAR2(36),
    POST_BROKER_LOGIN_FLOW_ID  VARCHAR2(36),
    PROVIDER_DISPLAY_NAME      VARCHAR2(255),
    LINK_ONLY                  NUMBER(1, 0) DEFAULT 0 NOT NULL,
    CONSTRAINT UK_IP_REALM_ALIAS UNIQUE (REALM_ID, PROVIDER_ALIAS),
    CONSTRAINT FK_IP_REALM FOREIGN KEY (REALM_ID) REFERENCES REALM,
    PRIMARY KEY (INTERNAL_ID)
);

CREATE INDEX IDX_IDP_REALM ON IDENTITY_PROVIDER (REALM_ID);

CREATE TABLE IDENTITY_PROVIDER_CONFIG
(
    ID                    VARCHAR2(36) NOT NULL,
    IDENTITY_PROVIDER_ID  VARCHAR2(36) NOT NULL,
    NAME                  VARCHAR2(255) NOT NULL,
    VALUE                 NVARCHAR2(4000),
    CONSTRAINT FK_IDP_CONFIG FOREIGN KEY (IDENTITY_PROVIDER_ID) REFERENCES IDENTITY_PROVIDER,
    PRIMARY KEY (ID)
);

CREATE INDEX IDX_IP_CONFIG_IP ON IDENTITY_PROVIDER_CONFIG (IDENTITY_PROVIDER_ID);

CREATE TABLE IDENTITY_PROVIDER_MAPPERS
(
    INTERNAL_ID        VARCHAR2(36) NOT NULL,
    IDENTITY_PROVIDER VARCHAR2(36) NOT NULL,
    NAME               VARCHAR2(255) NOT NULL,
    IDP_MAPPER_NAME    VARCHAR2(255) NOT NULL,
    CONSTRAINT FK_IDP_MAPPERS_IP FOREIGN KEY (IDENTITY_PROVIDER) REFERENCES IDENTITY_PROVIDER,
    PRIMARY KEY (INTERNAL_ID)
);

CREATE INDEX IDX_IP_MAPPER_IP ON IDENTITY_PROVIDER_MAPPERS (IDENTITY_PROVIDER);

CREATE TABLE IDENTITY_PROVIDER_ROLE_MAPPER
(
    INTERNAL_ID         VARCHAR2(36) NOT NULL,
    IDENTITY_PROVIDER  VARCHAR2(36) NOT NULL,
    ROLE_MAPPER         VARCHAR2(36) NOT NULL,
    ROLES_SCOPE_MAPPING VARCHAR2(36),
    CONSTRAINT FK_IDP_ROLES_MAPPER_IP FOREIGN KEY (IDENTITY_PROVIDER) REFERENCES IDENTITY_PROVIDER,
    CONSTRAINT FK_IDP_ROLES_MAPPER_RM FOREIGN KEY (ROLE_MAPPER) REFERENCES ROLE_MAPPER,
    CONSTRAINT FK_IDP_ROLES_MAPPER_RS FOREIGN KEY (ROLES_SCOPE_MAPPING) REFERENCES ROLES_SCOPE_MAPPING,
    PRIMARY KEY (INTERNAL_ID)
);

CREATE INDEX IDX_IP_ROLES_MAPPER_IP ON IDENTITY_PROVIDER_ROLE_MAPPER (IDENTITY_PROVIDER);

CREATE TABLE OFFLINE_USER_CLIENT_SCOPE
(
    USER_SESSION_ID  VARCHAR2(36) NOT NULL,
    CLIENT_SCOPE_ID  VARCHAR2(36) NOT NULL,
    CONSTRAINT R_USER_CLIENT_SCOPE_BIND PRIMARY KEY (USER_SESSION_ID, CLIENT_SCOPE_ID),
    CONSTRAINT FK_USER_CLIENT_SCOPE_USER FOREIGN KEY (USER_SESSION_ID) REFERENCES OFFLINE_USER_SESSION,
    CONSTRAINT FK_USER_CLIENT_SCOPE_SCOPE FOREIGN KEY (CLIENT_SCOPE_ID) REFERENCES CLIENT_SCOPE
);

CREATE INDEX IDX_USER_CLI_SCOPE_USER ON OFFLINE_USER_CLIENT_SCOPE (USER_SESSION_ID);

CREATE INDEX IDX_USER_CLI_SCOPE_SCOPE ON OFFLINE_USER_CLIENT_SCOPE (CLIENT_SCOPE_ID);

CREATE TABLE REALM_OAUTH_POLICY
(
    REALM_ID                 VARCHAR2(36) NOT NULL,
    OAUTH_CLIENT_POLICY_ID   VARCHAR2(36) NOT NULL,
    RESOURCES_POLICY_ID      VARCHAR2(36),
    RESOURCE_SERVER_POLICY_ID VARCHAR2(36),
    CONSTRAINT R_REALM_OAUTH_POLICY_BIND PRIMARY KEY (REALM_ID, OAUTH_CLIENT_POLICY_ID),
    CONSTRAINT FK_REALM_OAUTH_POLICY_REALM FOREIGN KEY (REALM_ID) REFERENCES REALM,
    CONSTRAINT FK_REALM_OAUTH_POLICY_OCP FOREIGN KEY (OAUTH_CLIENT_POLICY_ID) REFERENCES OAUTH_CLIENT_POLICY,
    CONSTRAINT FK_REALM_OAUTH_POLICY_RP FOREIGN KEY (RESOURCES_POLICY_ID) REFERENCES RESOURCES_POLICY,
    CONSTRAINT FK_REALM_OAUTH_POLICY_RSP FOREIGN KEY (RESOURCE_SERVER_POLICY_ID) REFERENCES RESOURCE_SERVER_POLICY
);

CREATE INDEX IDX_REALM_OAUTH_POLICY_REALM ON REALM_OAUTH_POLICY (REALM_ID);

CREATE TABLE USER_CONSENT
(
    ID                 VARCHAR2(36)   NOT NULL,
    USER_ID            VARCHAR2(255)  NOT NULL,
    CLIENT_ID          VARCHAR2(255)  NOT NULL,
    CREATED_TIMESTAMP NUMBER         NOT NULL,
    EXPIRATION_TIMESTAMP NUMBER       NOT NULL,
    LAST_UPDATED_TIMESTAMP NUMBER(1) DEFAULT 0 NOT NULL,
    CONSTRAINT R_USER_CONSENT_PRIMARY_KEY PRIMARY KEY (ID),
    CONSTRAINT FK_USER_CONSENT_USER FOREIGN KEY (USER_ID) REFERENCES FED_USER,
    CONSTRAINT FK_USER_CONSENT_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT
);

CREATE INDEX IDX_USER_CONSENT_USER ON USER_CONSENT (USER_ID);

CREATE INDEX IDX_USER_CONSENT_CLIENT ON USER_CONSENT (CLIENT_ID);

CREATE TABLE USER_REQUIRED_ACTION
(
    ID          VARCHAR2(36) NOT NULL,
    USER_ID     VARCHAR2(36) NOT NULL,
    ACTION_TYPE VARCHAR2(36) NOT NULL,
    CONSTRAINT FK_USER_REQ_ACT_USER FOREIGN KEY (USER_ID) REFERENCES FED_USER,
    CONSTRAINT FK_USER_REQ_ACT_ACT FOREIGN KEY (ACTION_TYPE) REFERENCES REQUIRED_ACTION
);

CREATE INDEX IDX_USER_REQ_ACT_USER ON USER_REQUIRED_ACTION (USER_ID);

CREATE INDEX IDX_USER_REQ_ACT_ACT ON USER_REQUIRED_ACTION (ACTION_TYPE);

CREATE TABLE USER_ROLE_MAPPING
(
    USER_ID VARCHAR2(36) NOT NULL,
    ROLE_ID VARCHAR2(36) NOT NULL,
    CONSTRAINT FK_USER_ROLE_MAPPING_USER FOREIGN KEY (USER_ID) REFERENCES FED_USER,
    CONSTRAINT FK_USER_ROLE_MAPPING_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE
);

CREATE INDEX IDX_USER_ROLE_MAPPING_USER ON USER_ROLE_MAPPING (USER_ID);

CREATE INDEX IDX_USER_ROLE_MAPPING_ROLE ON USER_ROLE_MAPPING (ROLE_ID);

-- USER_SESSION
CREATE TABLE USER_SESSION
(
    ID                   VARCHAR2(36)           NOT NULL PRIMARY KEY,
    AUTH_METHOD          VARCHAR2(255),
    IP_ADDRESS           VARCHAR2(255),
    LAST_SESSION_REFRESH NUMBER,
    LOGIN_USERNAME       VARCHAR2(255),
    REALM_ID             VARCHAR2(255),
    REMEMBER_ME          NUMBER(1) DEFAULT 0 NOT NULL,
    STARTED              NUMBER,
    USER_ID              VARCHAR2(255),
    USER_SESSION_STATE   NUMBER,
    BROKER_SESSION_ID    VARCHAR2(255),
    BROKER_USER_ID       VARCHAR2(255)
);

-- CLIENT_SESSION
CREATE TABLE CLIENT_SESSION
(
    ID             VARCHAR2(36) NOT NULL PRIMARY KEY,
    CLIENT_ID      VARCHAR2(36),
    REDIRECT_URI   VARCHAR2(255),
    STATE          VARCHAR2(255),
    TIMESTAMP      NUMBER,
    SESSION_ID     VARCHAR2(36),
    AUTH_METHOD    VARCHAR2(255),
    REALM_ID       VARCHAR2(255),
    AUTH_USER_ID   VARCHAR2(36),
    CURRENT_ACTION VARCHAR2(36),
    CONSTRAINT FK_CLIENT_SESSION_USER_SESSION
        FOREIGN KEY (SESSION_ID) REFERENCES USER_SESSION (ID)
);

CREATE INDEX IDX_CLIENT_SESSION_SESSION
    ON CLIENT_SESSION (SESSION_ID);

-- CLIENT_SESSION_AUTH_STATUS
CREATE TABLE CLIENT_SESSION_AUTH_STATUS
(
    AUTHENTICATOR  VARCHAR2(36) NOT NULL,
    STATUS         NUMBER,
    CLIENT_SESSION VARCHAR2(36) NOT NULL,
    PRIMARY KEY (CLIENT_SESSION, AUTHENTICATOR),
    CONSTRAINT FK_CLIENT_SESSION_AUTH_STATUS_CLIENT_SESSION
        FOREIGN KEY (CLIENT_SESSION) REFERENCES CLIENT_SESSION (ID)
);

-- CLIENT_SESSION_NOTE
CREATE TABLE CLIENT_SESSION_NOTE
(
    NAME           VARCHAR2(255) NOT NULL,
    VALUE          VARCHAR2(255),
    CLIENT_SESSION VARCHAR2(36) NOT NULL,
    PRIMARY KEY (CLIENT_SESSION, NAME),
    CONSTRAINT FK_CLIENT_SESSION_NOTE_CLIENT_SESSION
        FOREIGN KEY (CLIENT_SESSION) REFERENCES CLIENT_SESSION (ID)
);

-- CLIENT_SESSION_PROT_MAPPER
CREATE TABLE CLIENT_SESSION_PROT_MAPPER
(
    PROTOCOL_MAPPER_ID VARCHAR2(36) NOT NULL,
    CLIENT_SESSION     VARCHAR2(36) NOT NULL,
    PRIMARY KEY (CLIENT_SESSION, PROTOCOL_MAPPER_ID),
    CONSTRAINT FK_CLIENT_SESSION_PROT_MAPPER_CLIENT_SESSION
        FOREIGN KEY (CLIENT_SESSION) REFERENCES CLIENT_SESSION (ID)
);

-- CLIENT_SESSION_ROLE
CREATE TABLE CLIENT_SESSION_ROLE
(
    ROLE_ID        VARCHAR2(255) NOT NULL,
    CLIENT_SESSION VARCHAR2(36) NOT NULL,
    PRIMARY KEY (CLIENT_SESSION, ROLE_ID),
    CONSTRAINT FK_CLIENT_SESSION_ROLE_CLIENT_SESSION
        FOREIGN KEY (CLIENT_SESSION) REFERENCES CLIENT_SESSION (ID)
);

-- CLIENT_USER_SESSION_NOTE
CREATE TABLE CLIENT_USER_SESSION_NOTE
(
    NAME           VARCHAR2(255) NOT NULL,
    VALUE          VARCHAR2(2048),
    CLIENT_SESSION VARCHAR2(36) NOT NULL,
    CONSTRAINT CONSTR_CLIENT_USER_SESSION_NOTE
        PRIMARY KEY (CLIENT_SESSION, NAME),
    CONSTRAINT FK_CLIENT_USER_SESSION_NOTE_CLIENT_SESSION
        FOREIGN KEY (CLIENT_SESSION) REFERENCES CLIENT_SESSION (ID)
);

-- USER_SESSION_NOTE
CREATE TABLE USER_SESSION_NOTE
(
    USER_SESSION VARCHAR2(36) NOT NULL,
    NAME         VARCHAR2(255) NOT NULL,
    VALUE        VARCHAR2(2048),
    PRIMARY KEY (USER_SESSION, NAME),
    CONSTRAINT FK_USER_SESSION_NOTE_USER_SESSION
        FOREIGN KEY (USER_SESSION) REFERENCES USER_SESSION (ID)
);

-- WEB_ORIGINS
CREATE TABLE WEB_ORIGINS
(
    CLIENT_ID VARCHAR2(36) NOT NULL,
    VALUE     VARCHAR2(255) NOT NULL,
    PRIMARY KEY (CLIENT_ID, VALUE),
    CONSTRAINT FK_WEB_ORIGINS_CLIENT
        FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT (ID)
);

CREATE INDEX IDX_WEB_ORIG_CLIENT
    ON WEB_ORIGINS (CLIENT_ID);



